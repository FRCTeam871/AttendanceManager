package com.team871.ui;

import com.team871.data.FirstRegistration;
import com.team871.data.Member;
import com.team871.data.SafeteyFormState;
import com.team871.data.Subteam;
import org.jetbrains.annotations.NotNull;

import javax.swing.*;
import javax.swing.border.TitledBorder;
import java.awt.*;
import java.awt.event.*;
import java.text.DecimalFormat;
import java.util.Arrays;

public class StudentEditor extends JDialog {
    private JPanel rootPanel;
    private JPanel okCancelPanel;
    private JButton okButton;
    private JButton cancelButton;
    private JPanel mainContentPanel;
    private JTextField nameEntry;
    private JFormattedTextField ageEntry;
    private JComboBox<Integer> gradeCombo;
    private JComboBox<Subteam> subteamCombo;
    private JComboBox<FirstRegistration> registrationComvo;
    private JComboBox<SafeteyFormState> safetyCombo;
    private final Member member;

    public StudentEditor(@NotNull Member member) {
        this.member = member;
        $$$setupUI$$$();
        setContentPane(rootPanel);
        setModal(true);
        getRootPane().setDefaultButton(okButton);

        okButton.addActionListener(e -> onOK());
        cancelButton.addActionListener(e -> onCancel());

        // call onCancel() when cross is clicked
        setDefaultCloseOperation(DO_NOTHING_ON_CLOSE);
        addWindowListener(new WindowAdapter() {
            public void windowClosing(WindowEvent e) {
                onCancel();
            }
        });

        // call onCancel() on ESCAPE
        rootPanel.registerKeyboardAction(e -> onCancel(), KeyStroke.getKeyStroke(KeyEvent.VK_ESCAPE, 0), JComponent.WHEN_ANCESTOR_OF_FOCUSED_COMPONENT);

        Arrays.stream(Subteam.values()).forEach(subteamCombo::addItem);
        Arrays.stream(FirstRegistration.values()).forEach(registrationComvo::addItem);
        Arrays.stream(SafeteyFormState.values()).forEach(safetyCombo::addItem);

        nameEntry.setText(member.getFirstName() + " " + member.getLastName());
        ageEntry.setValue(member.getAge());
        gradeCombo.setSelectedItem(member.getGrade());
        subteamCombo.setSelectedItem(member.getSubteam());
        registrationComvo.setSelectedItem(member.getRegistration());
        safetyCombo.setSelectedItem(member.getSafeteyFormState());

        this.pack();
        this.setResizable(false);
    }

    private void onOK() {
        final String[] nameBits = nameEntry.getText().trim().split("\\s+");
        if (nameBits.length != 2) {
            return;
        }

        if (!nameBits[0].equalsIgnoreCase(member.getFirstName()) ||
                !nameBits[1].equalsIgnoreCase(member.getLastName())) {
            member.setName(nameBits[0], nameBits[1]);
        }

        final Integer age = (Integer) ageEntry.getValue();
        if (age != null && age != member.getAge()) {
            member.setAge(age);
        }

        final Integer grade = (Integer) gradeCombo.getSelectedItem();
        if (grade != null && grade != member.getGrade()) {
            member.setGrade(grade);
        }

        final Subteam subteam = (Subteam) subteamCombo.getSelectedItem();
        if (subteam != null && subteam != member.getSubteam()) {
            member.setSubteam(subteam);
        }

        final SafeteyFormState safeteyFormState = (SafeteyFormState) safetyCombo.getSelectedItem();
        if (safeteyFormState != null && safeteyFormState != member.getSafeteyFormState()) {
            member.setSafetyState(safeteyFormState);
        }

        final FirstRegistration registration = (FirstRegistration) registrationComvo.getSelectedItem();
        if (registration != null && registration != member.getRegistration()) {
            member.setFirstRegistration(registration);
        }

        // TODO Should do validation before setting,  but YOLO for now

        dispose();
    }

    private void onCancel() {
        // add your code here if necessary
        dispose();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        createUIComponents();
        rootPanel = new JPanel();
        rootPanel.setLayout(new BorderLayout(0, 0));
        okCancelPanel = new JPanel();
        okCancelPanel.setLayout(new GridBagLayout());
        rootPanel.add(okCancelPanel, BorderLayout.SOUTH);
        okButton = new JButton();
        okButton.setText("OK");
        GridBagConstraints gbc;
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 0, 4, 0);
        okCancelPanel.add(okButton, gbc);
        final JPanel spacer1 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        okCancelPanel.add(spacer1, gbc);
        final JPanel spacer2 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.VERTICAL;
        okCancelPanel.add(spacer2, gbc);
        cancelButton = new JButton();
        cancelButton.setText("Cancel");
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 4, 4, 4);
        okCancelPanel.add(cancelButton, gbc);
        mainContentPanel = new JPanel();
        mainContentPanel.setLayout(new GridBagLayout());
        rootPanel.add(mainContentPanel, BorderLayout.CENTER);
        mainContentPanel.setBorder(BorderFactory.createTitledBorder(BorderFactory.createLineBorder(Color.black), "Student Details", TitledBorder.DEFAULT_JUSTIFICATION, TitledBorder.DEFAULT_POSITION, null, null));
        final JLabel label1 = new JLabel();
        label1.setText("Name");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 0;
        gbc.anchor = GridBagConstraints.EAST;
        mainContentPanel.add(label1, gbc);
        final JLabel label2 = new JLabel();
        label2.setText("Age");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 1;
        gbc.anchor = GridBagConstraints.EAST;
        mainContentPanel.add(label2, gbc);
        final JLabel label3 = new JLabel();
        label3.setText("Grade");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 2;
        gbc.anchor = GridBagConstraints.EAST;
        mainContentPanel.add(label3, gbc);
        final JPanel spacer3 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 6;
        gbc.weighty = 1.0;
        gbc.fill = GridBagConstraints.VERTICAL;
        mainContentPanel.add(spacer3, gbc);
        final JLabel label4 = new JLabel();
        label4.setText("Subteam");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 3;
        gbc.anchor = GridBagConstraints.EAST;
        mainContentPanel.add(label4, gbc);
        final JLabel label5 = new JLabel();
        label5.setText("FIRST Registration");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 4;
        gbc.anchor = GridBagConstraints.EAST;
        mainContentPanel.add(label5, gbc);
        nameEntry = new JTextField();
        nameEntry.setColumns(25);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(4, 4, 0, 4);
        mainContentPanel.add(nameEntry, gbc);
        ageEntry.setColumns(4);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 1;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 4, 0, 4);
        mainContentPanel.add(ageEntry, gbc);
        gradeCombo = new JComboBox();
        final DefaultComboBoxModel defaultComboBoxModel1 = new DefaultComboBoxModel();
        defaultComboBoxModel1.addElement("9");
        defaultComboBoxModel1.addElement("10");
        defaultComboBoxModel1.addElement("11");
        defaultComboBoxModel1.addElement("12");
        gradeCombo.setModel(defaultComboBoxModel1);
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 2;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 4, 0, 4);
        mainContentPanel.add(gradeCombo, gbc);
        subteamCombo = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 3;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 4, 0, 4);
        mainContentPanel.add(subteamCombo, gbc);
        registrationComvo = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 4;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 4, 0, 4);
        mainContentPanel.add(registrationComvo, gbc);
        safetyCombo = new JComboBox();
        gbc = new GridBagConstraints();
        gbc.gridx = 1;
        gbc.gridy = 5;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        gbc.insets = new Insets(0, 4, 4, 4);
        mainContentPanel.add(safetyCombo, gbc);
        final JLabel label6 = new JLabel();
        label6.setText("Safety Form");
        gbc = new GridBagConstraints();
        gbc.gridx = 0;
        gbc.gridy = 5;
        gbc.anchor = GridBagConstraints.EAST;
        mainContentPanel.add(label6, gbc);
        final JPanel spacer4 = new JPanel();
        gbc = new GridBagConstraints();
        gbc.gridx = 2;
        gbc.gridy = 0;
        gbc.weightx = 1.0;
        gbc.fill = GridBagConstraints.HORIZONTAL;
        mainContentPanel.add(spacer4, gbc);
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return rootPanel;
    }

    private void createUIComponents() {
        ageEntry = new JFormattedTextField(new DecimalFormat("##"));
    }
}
